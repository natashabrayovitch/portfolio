{"version":3,"sources":["Images/who.jpg","Images/what.jpg","Images/proj.jpg","Images/amb.jpg","Images/testimonials.jpg","Images/contact.jpg","logo.jpg","Stack.js","gallery-get.js","Gallery.js","Details/Details.js","NotFound.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Stack","props","react_default","a","createElement","Link","to","concat","id","className","src","logo","alt","name","getGallery","who","details","what","proj","amb","testimonials","contact","Gallery","map","stack","key","Details","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","gallery","galleryId","match","params","find","setState","undefined","Redirect","Component","NotFound","App","HashRouter","Switch","Route","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c327f218.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/who.545ca21e.jpg\";","module.exports = __webpack_public_path__ + \"static/media/what.5d70543e.jpg\";","module.exports = __webpack_public_path__ + \"static/media/proj.4e065e0c.jpg\";","module.exports = __webpack_public_path__ + \"static/media/amb.acadb1e4.jpg\";","module.exports = __webpack_public_path__ + \"static/media/testimonials.68d357ff.jpg\";","module.exports = __webpack_public_path__ + \"static/media/contact.2623c899.jpg\";","module.exports = __webpack_public_path__ + \"static/media/logo.fb3f916b.jpg\";","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nexport default function Stack(props) {\n    return (\n      <Link to={`/${props.id}`} className='item'>\n        <img src={props.logo} alt={`${props.name} logo`} />\n        <div className='overlay'>\n          <h1>{props.name}</h1>\n        </div>\n      </Link>\n    )\n  }","\nimport who from './Images/who.jpg';\nimport what from './Images/what.jpg';\nimport proj from './Images/proj.jpg';\nimport amb from './Images/amb.jpg';\nimport testimonials from './Images/testimonials.jpg';\nimport contact from './Images/contact.jpg';\n\nexport default function getGallery() {\n    return [\n      { id: 'who', name: 'Who is Natasha', logo: who, details: \"My name is Natasha. I am Kodiri's project made from scratch.\" },\n      { id: 'what', name: 'About me', logo: what, details: \"I am a hairdresser who can write and read JavaScript programming language. I can also write, read and speak several Europan human languages.\"},\n      { id: 'proj', name: 'Current projects', logo: proj, details:\"Currently I am working on the Kodiri's 'Kodflix' web app, and I am a member of Kodiri's Bravo-team working on our team project 'Koinalasys' web app which is CryptoCurrency Price and Market Capitalisation Site and is a fullstack site where we are showcasing our skills with css and design, DB and use of API's. The app integrates and compliments with our React and JavaScript study \" },\n      { id: 'amb', name: 'Why Kodiri', logo: amb, details: \"The main reasons why I have chosen Kodiri academy is to be able to understand the  most popular and modern way to create the structure of web sites, mobile apps, PWA's. My 2 ambitions are 1. to create a mobile app for my own business of hairdressing education , 2. to have fun with my three sons who are into computer games making! \" },\n      { id: 'testimonials', name: 'Testimonials', logo: testimonials, details: \"WIP\" },\n      { id: 'contact', name: 'Contact', logo: contact, details: \"WIP\" },\n    ];\n  }","\n\nimport React from 'react';\nimport Stack from './Stack';\nimport getGallery from './gallery-get';\nimport logo from './logo.jpg';\n\n\nexport default function Gallery() {\n  return (\n    <div>\n      <div>\n        <Stack id='logo' name=' ' logo={logo} />\n      </div>\n      <div className='container'>\n        {\n          getGallery().map(stack => (\n            <Stack\n              key={stack.id}\n              id={stack.id}\n              name={stack.name}\n              logo={stack.logo} />\n          ))\n        }\n      </div>\n    </div>\n  )\n}\n\n","\nimport React, { Component } from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport getGallery from '../gallery-get';\nimport './Details.css';\nexport default class Details extends Component {\n\n  constructor() {\n    super();\n    this.state = {\n      gallery: {}\n    };\n  }\n\n  componentDidMount() {\n    let galleryId = this.props.match.params.galleryId;\n    let gallery = getGallery()\n      .find((gallery) => gallery.id === galleryId);\n    this.setState({ gallery });\n  }\n\n  render() {\n    if (this.state.gallery === undefined) {\n      return <Redirect to='not-found' />;\n    } else {\n      return (\n        <div className='Details'>\n          <h1>{this.state.gallery.name}</h1>\n          <div className='content'>\n            <div className='text'>\n              {this.state.gallery.details}</div>\n            <img\n            className='image'\n              src={this.state.gallery.logo}\n              alt={this.state.gallery.name} />\n          </div>\n          <Link to='/'>Back to Home</Link>\n        </div>\n      );\n    }\n  }\n}\n","import React from 'react';\n\n export default function NotFound() {\n    return(\n        <div>\n            <h1>ooops, check spelling and try again</h1>\n        </div>\n    )\n }","\nimport React, { Component } from 'react';\nimport { HashRouter, Route, Switch } from 'react-router-dom';\nimport Gallery from './Gallery';\nimport Details from './Details/Details';\nimport NotFound from './NotFound';\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <HashRouter>\n        <div>\n          <div className=\"App\">\n            <Switch>\n              <Route exact path='/' component={Gallery} />\n              <Route exact path='/not-found' component={NotFound} />\n              <Route exact path='/:galleryId' component={Details} />\n            </Switch>\n          </div>\n        </div>\n      </HashRouter>\n    );\n  }\n}\n\nexport default App;\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}